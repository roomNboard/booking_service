# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here

      - image: circleci/node:10-browsers
        environment:
          - NODE_ENV=test
          - pgUSER=root
          - pgHost=localhost
          - pgPort=5432
          - pgDatabase=test
          - pgPassword=

      - image: circleci/postgres:10.4-alpine
        environment:
          - POSTGRES_USER=root
          - POSTGRES_DB=test
    
      - image: redis

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      - run: sudo apt-get install postgresql-client
      - run: sudo apt-get install redis-tools
      - run: npm install
      - run: |
          psql \
          -d test -h localhost -p 5432 -U root\
          -f "database/postgreSQL/postgreSQL schema.sql"
      - run: node database/insertMockData.js
      

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      

      - run:
          name: wait for redis
          command: while ! redis-cli ping 2>/dev/null ; do sleep 1 ; done

      - run:
          name: Wait for postgres db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      
      # run tests!
      - run: npm test


